<!--23.04.05-->



<!-- <style>
    #btn{
        font-size: 2rem;
        background-color: transparent;
        cursor: pointer;
        border: none;
    }   

    #side-bar{
        position: fixed;
        top:0;
        left: 0;
        bottom: 0;
        width: 16rem;
        background-color: #fff;
        transition: 0.2s;
        z-index: 1;
    }

    #overlay{
        position: fixed;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        background-color: rgba(0 0 0 0);
    }

    #side-bar.hidden{
        left: -16rem;
    }
    #overlay.hidden{
        display: none;
    }


</style>

<button id="btn">&#9776;</button>
<nav id="side-bar" class="hidden">
    <h1>Logo</h1>
    <ul>
        <li>Menu</li>
        <li>Menu</li>
        <li>Menu</li>
    </ul>
</nav>

<div id="overlay" class="hidden"></div>
<main>
    <h1>Side Bar</h1>
    <p>
        Lorem ipsum dolor sit amet consectetur adipisicing elit.
         Animi sit expedita at hic cum ratione molestiae odit a nostrum,
          consectetur sapiente qui, libero ad nesciunt aut.
           Animi rerum ad deleniti!
    </p>
</main>

<script>
    var btn = document.getElementById('btn');
    var sideBar = document.getElementById('side-bar');
    var overlay = document.getElementById('overlay');

    //사이드바 나타나게 하기
    btn.addEventListener('click', ()=>{
        sideBar.classList.remove('hidden');
        overlay.classList.remove('hidden');
        
    }); 


    //사이드바 숨기기
    overlay.addEventListener('click', () => {
            sideBar.classList.add('hidden');
            overlay.classList.add('hidden');


    });


</script> -->


<!-- <h1>Drawer</h1>
<p>Add Some drag event.</p>

<style>
    #nav{
        position: fixed;
        left: 0;
        top: 100vh;
        width: 100%;
        height: 100vh;
        transition: top 0.5s;
        box-sizing: border-box;
        border: 1px solid #ddd;
        border-radius: 1rem 1rem 0 0;
        background-color: #fff;
    }

    #drawer-handle{
        width: 100%;
        padding: 1rem;
        cursor: grab;
        border: none;
        background-color: transparent;
        font-weight: 600;
        font-size: 1rem;
    }

</style>

<nav id="nav" class="hidden">
    <button id="drawer-handle">Drag me</button>
    <ul>
        <li>list item</li>
        <li>list item</li>
        <li>list item</li>
    </ul>
</nav>

<button id="open-btn" type="button">More</button>

<script>
    var nav = document.getElementById('nav');
    var drawHandle = document.getElementById('drawer-handle');
    var openBtn = document.getElementById('open-btn');
    var TOP;

    //console.log(top); //window

    openBtn.addEventListener('click', (e) => {
        nav.style.top = '20vh';
        
    })

    drawHandle.addEventListener('touchmove', (e) =>{
        //touchmove : 누르고 움직이는 행위
        //모바일로 돌려야 정상적인 반응 나옴
        console.log('터치 중');

        //뷰포트 탑과 손가락의 거리.
        var clientY = e.touches[0].clientY;
        
        // innerHeight 뷰포트의 높이
        TOP = clientY / window.innerHeight * 100;

        console.log(TOP);
        //실시간으로 스타일의 top을 바꾸기 위해 넣음.
        nav.style.top = TOP + 'vh';
    })

    drawHandle.addEventListener('touchend', (e) => {
        //...
        console.log('터치 끝');

        if(TOP > 50){ //Draw가 화면 절반 아래로 내려온 경우
            nav.style.top = "100vh";
        }else{
            nav.style.top = "20vh";
        }

    })

</script> -->

<!-- 자바스크립트 sticky note 만들 예정 -->
<!-- image editer 등.... -->
<!-- breakout js .... -->
<!-- frogger... -->


<!-- <h1>Modal</h1>
<style>
    #overlay{
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0 0 0 / 0.2);
    }

    #modal {
        background-color: #fff;
        margin: 100px auto 0;
        max-width: 20rem;
        padding: 1rem;
        border-radius: 1rem;
    }

    #close-btn{
        font-size: 2rem;
        float: right;
        background-color: transparent;
        border: none;
        color: #fff;
        padding: 1rem;
        cursor: pointer;
    }
    .hidden{
        display: none;
    }

</style>

<button id="btn">Open</button>

<div id="overlay" class="hidden">
    <button id="close-btn">&times;</button>
    <div id="modal">
        <h1>Heading</h1>
        <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. 
            Totam, dolorum veritatis. Consectetur qui nesciunt eveniet aliquam fuga eos ab odit officiis. 
            Dolores odit architecto maiores praesentium vero provident, exercitationem in.</p>
    </div>
</div>

<script>
    var overlay = document.getElementById('overlay');
    var btn = document.getElementById('btn');
    var closeBtn = document.getElementById('close-btn');
   
    //모달 열기
    btn.addEventListener('click', () => {
        overlay.classList.remove('hidden');

    })

    //모달 닫기
    //overlay : 클릭을 감지하는 범위
    overlay.addEventListener('click', (e) =>{
        
        //overlay 자체가 이벤트를 감지하는 역할이 됨

        //이벤트가 발생한 엘리먼트 (현재 이벤트 : 클릭)
        console.log(e.target);


        //오버레이를 클릭했을 때
        if(e.target === overlay){
            overlay.classList.add('hidden');
        }

        //닫기버튼을 클릭했을 때
        if(e.target === closeBtn){
            overlay.classList.add('hidden');
        }

    })



</script> -->

<!-- Modal 이미지 문제 -->

<style>
    #overlay{
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0 0 0 / 0.2);
    }

    #modal1 {
        background-color: #fff;
        margin: 100px auto 0;
        max-width: 20rem;
        padding: 1rem;
        border-radius: 1rem;
    }
    #modal2 {
        background-color: #fff;
        margin: 100px auto 0;
        max-width: 20rem;
        padding: 1rem;
        border-radius: 1rem;
    }
    #modal3 {
        background-color: #fff;
        margin: 100px auto 0;
        max-width: 20rem;
        padding: 1rem;
        border-radius: 1rem;
    }

    #close-btn{
        font-size: 2rem;
        float: right;
        background-color: transparent;
        border: none;
        color: #fff;
        padding: 1rem;
        cursor: pointer;
    }
    .hidden{
        display: none;
    }
    .defaultimg{
        width: 100px;
        height: 100px;
        opacity: 0.8;
        
    }
    img:hover{
        opacity: 1;
    }
    
</style>

<h1>Q.Modal Gallery</h1>
<div id="images">
    <img src="hugplease.webp" alt="안아줘요" class="defaultimg" id="hug">
    <img src="verythank.png" alt="정말고마워요" class="defaultimg" id="thank">
    <img src="fuhaha.png" alt="푸하하" class="defaultimg" id="haha">
</div>

<div id="overlay" class="hidden">
    <button id="close-btn">&times;</button>
    <div id="modal1">
        <img src="hugplease.webp" alt="안아줘요"> 
    </div>
    <div id="modal2">
        <img src="verythank.png" alt="정말고마워요">
    </div>
    <div id="modal3">
        <img src="fuhaha.png" alt="푸하하">
    </div>
</div>


<script>
    var overlay = document.getElementById('overlay');
    var images = document.getElementById('images');
    var closeBtn = document.getElementById('close-btn');

    var hug = document.getElementById('hug');
    var thank = document.getElementById('thank');
    var haha = document.getElementById('haha');

    var modal1 = document.getElementById('modal1');
    var modal2 = document.getElementById('modal2');
    var modal3 = document.getElementById('modal3');
   
    //모달 열기
    images.addEventListener('click', (e) => {
        console.log(e.target);
        overlay.classList.remove('hidden');

        if(e.target === hug){
            modal1.classList.remove('hidden');
            modal2.classList.add('hidden');
            modal3.classList.add('hidden');
        }
        if(e.target === thank){
            modal1.classList.add('hidden');
            modal2.classList.remove('hidden');
            modal3.classList.add('hidden');
        }
        if(e.target === haha){
            modal1.classList.add('hidden');
            modal2.classList.add('hidden');
            modal3.classList.remove('hidden');
        }

    })

    //모달 닫기
    //overlay : 클릭을 감지하는 범위
    overlay.addEventListener('click', (e) =>{
        
        //overlay 자체가 이벤트를 감지하는 역할이 됨

        //이벤트가 발생한 엘리먼트 (현재 이벤트 : 클릭)
        console.log(e.target);


        //오버레이를 클릭했을 때
        if(e.target === overlay){
            overlay.classList.add('hidden');
        }

        //닫기버튼을 클릭했을 때
        if(e.target === closeBtn){
            overlay.classList.add('hidden');
        }

    });


</script>