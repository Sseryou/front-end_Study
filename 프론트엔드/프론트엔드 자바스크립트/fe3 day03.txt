//day03

//Q. 인자에 따라서 성인인지 아닌지를 말해주는 함수를 만들어 보세요

// //함수 선언
// function isAdult(age){//age : 매개변수(parameter)
//     if(typeof age !== 'number'){
//         console.log('인자는 숫자만 가능합니다.');
//         return; //return 아래 코드는 실행되지 않는다.
//     }

//     age < 19 ? console.log('성인이 아닙니다.') : console.log('성인입니다.');
// }
// //함수 호출
// isAdult(20); //성인입니다.
// isAdult(11); //성인이 아닙니다.   인자(argument) : 11

// //파라미터와 인자의 차이
// //함수에 실제로 전달하는 값 : 인자(argument)
// //함수에 넣어주도록 정의되어 있는 값 : 매개변수(parameter)

// //매개변수로 집어넣는 값 통제하기

// isAdult('a'); //성인입니다 출력


/*
    배열 (Array)

    한개 이상의 값을 갖는 데이터 타입

    1. 배열에 접근하기
    2. 배열 메서드
    3. 배열과 반복문

*/

//1 배열에 접근하기

// var arr = ['foo', 'bar', 'baz']; //문자열 배열

// //첫번째 아이템의 index는 0이다
// console.log(arr[0]); //foo
// console.log(arr[1]); //bar
// console.log(arr[2]); //baz
// console.log(arr.length); //item의 갯수 : 3

//아이템 업데이트 하기
// arr[2] = 'Baz';
// console.log(arr);

//아이템 추가하기
//arr[3] = 'duck'; //4번째 자리의 item이 없기 때문에 추가됨
//console.log(arr);

// arr[4] = 'duck';
// console.log(arr); //4번째를 건너뛰었으므로 4번째는 undifined가 됨.
// console.log(arr[3]); //undifined

// for(var i = 0; i < arr.length; i++){
//     console.log(arr[i]);
// }

/*
    배열 메서드

    Array.push()
    Array.pop()
    Array.concat()
    Array.sort()

*/



//Array.push(newItem1, newItem2, ...)

// var arr = ['foo', 'bar'];

// arr.push('baz'); //맨 끝에 지정한 값을 삽입한다. 콤마를 이용하여 추가적으로 삽입가능

// console.log(arr);

//Array.pop()
// var arr = ['foo','bar','baz'];

// arr.pop(); //맨 끝 값을 제거한다.

// console.log(arr);

//Array1.concat(Array2) //concatenate
//Array1 뒤에 Array2를 붙인다.
// var arr1 = ['foo','bar'];
// var arr2 = ['baz'];

// var result = arr1.concat(arr2); //두 배열을 하나로 합친다.

// console.log(result);

//Array.sort();
//var arr = ['foo', 'bar', 'baz'];

//arr.sort(); //정렬 메서드
//문자열의 기본값은 알파벳순으로 정렬한다.

//console.log(arr);

//splice()
//ex)fruits.splice(2, 0, "Lemon", "Kiwi");
//인덱스 2 자리에 0개만큼의 앞의 자료를 제거하고 레몬과 키위를 삽입한다

//slice()
//ex)fruits.slice(2,4);
//인덱스 2자리부터 4자리까지만 남기고 자른다.

//reverse()
//배열을 거꾸로 다시 쓴다.


/*
    반복문과 배열

    배열에 특정한 작업을 수행할 수 있다.

*/

// var arr = ['foo', 'bar', 'baz'];

// //배열의 아이템에 특정한 작업을 수행할 수 있다.
// for(var i = 0; i< arr.length; i++){
//     console.log(arr[i].toUpperCase());
// }

//필터링 작업

// var arr = ['foo', 'bar', 'baz'];
// //배열 안에 들어간 문자들도 배열로 묶여있는 상태이다.

// for(var i = 0; i < arr.length; i++){
//     if(arr[i][0] === 'b'){
//         //인덱스 i번째 아이템의 0번째(1번째 글자)가 'b'이면 출력
//         console.log(arr[i]);
//     }
// }

//subString(2,13)
//2번째부터 13번째까지의 문자들을 추출

//substr(-4)
//마지막부터 4개의 문자를 추출

//replace("바꿔질문장", "바꿀문장")

//trim() : 문자열 앞 뒤의 공백을 제거
// console.log('             foo         ')
// console.log('             foo         '.trim());


//split() : () 안의 값을 기준으로 문자열을 분리한다.
//결과를 Array로 리턴한다.
//console.log('foo, bar, baz'.split(',')); //[ 'foo', ' bar', ' baz' ]

//Q1.

// var beers = ['기네스', '하이네켄'];
// var americanBeer = '버드와이저';

// beers.push(americanBeer); //방법1. push 이용해서 넣기
// console.log(beers);

// var result = beers.concat(americanBeer); //방법2. concat으로 합치기
// console.log(result);

// beers[2] = americanBeer; //방법3. 그냥 배열에 갖다박기...
// console.log(beers)

//Q2. 성인의 나이만 출력하는 코드 작성하기

// var ages = [12,19,23,30];

// for(var i = 0; i < ages.length; i++){
//     if(ages[i] >= 19){ //조건
//         console.log(ages[i]);
//     }
// }


/*
    객체(Object)
    데이터와 함수의 집합
    
*/

//객체
// var cat = {
//     //객체의 속성(property)
//     name: '치즈',
//     home: null,
//     sound: function(){ //메서드 (method)
//         return '야옹';
//     }
// }

//.은 객체 내부 속성에 접근할때 쓰인다.
// console.log(cat);
// console.log(cat.name); //name속성에 접근
// console.log(cat['name']); //name속성에 접근

// console.log(cat.color); //존재하지 않는 속성에 접근하면 undefined를 반환한다.

// console.log(cat.home);

// console.log(cat.sound()); //메서드 호출

//새로운 속성 추가
// cat.age = 2; //age 속성 추가
// console.log(cat);

//속성 업데이트

// var cat = {
//     //객체의 속성(property)
//     name: '치즈',
//     home: null,
//     sound: function(){ //메서드 (method)
//         return '야옹';
//     }
// }

// cat.home = '삼신동' //cat 내부의 home를 '삼신동'으로 업데이트
// console.log(cat);

//속성 삭제
// delete cat.home; //home 속성 삭제
// console.log(cat);

//Q.네덜란드 맥주의 이름에 접근해보세요.
var beers = [
    {name : '기네스', origin : '아일랜드'},
    {name : '하이네켄', origin : '네덜란드'},
    {name : '버드와이저', origin : '미국'}
]
console.log(beers[1].name); //배열 안으로 들어오면 접근이 가능하다.



